---
import Layout from "../layouts/Layout.astro";
import PageHeader from "../components/PageHeader.astro";
import { slugGenerator } from "../utils/slugGenerator.mjs";

// Get all of the posts
const allPosts = Object.values(
  import.meta.glob("./notes/*.md", { eager: true }),
);

// Create an object of flat arrays that include the tag and a generated slug, then sort it alphabetically by the title
const tagObjects = [
  ...new Set(allPosts.map((post: any) => post.frontmatter.tags).flat()),
]
  .map((tag: string) => ({
    title: tag,
    slug: slugGenerator(tag),
  }))
  .sort((a, b) => a.title.localeCompare(b.title));

const pageTitle = "Topics";
const heading = pageTitle;
---

<Layout pageTitle={pageTitle}>
  <div class="wrapper">
    <PageHeader heading={heading} />
    <article aria-labelledby="page title">
      <nav
        class="topics"
        aria-label="Table of contents"
        data-wrapper-type="inner"
      >
        <div class="prose">
          <details>
            <summary>Jump to a topic</summary>
            <ul>
              {
                tagObjects.map((tag) => (
                  <li>
                    <a href={`#${tag.slug}`}>#{tag.title}</a>
                  </li>
                ))
              }
            </ul>
          </details>
        </div>
      </nav>
      {
        tagObjects.map((tag) => {
          const taggedPosts = allPosts.filter((post: any) =>
            post.frontmatter.tags?.includes(tag.title),
          );

          return (
            <div class="border flow" data-wrapper-type="inner">
              <h2 id={tag.slug}>#{tag.title}</h2>
              <ul>
                {taggedPosts.map((post: any) => (
                  <li>
                    <a href={post.url}>{post.frontmatter.title}</a>
                  </li>
                ))}
              </ul>
            </div>
          );
        })
      }
    </article>
  </div>
</Layout>
