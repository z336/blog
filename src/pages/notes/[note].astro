---
import Layout from "../../layouts/Layout.astro";
import data from "./_notes.json";
import { dateFormatter } from "../../utils/dateFormatter.mjs";

// Get all of the notes and generate paths (slugs) based on the title
export async function getStaticPaths() {
  const allNotes = data;

  const paths = allNotes.map((note) => ({
    params: { note: note.title.toLowerCase().replace(/\s+/g, "-") },
    props: { notes: allNotes },
  }));

  return paths;
}

// Note is a hyphenated version of the title
const { note } = Astro.params;
const { notes } = Astro.props;

// Find the original note object based on the slug
const filteredNotes = notes.filter(
  (noteItem) => noteItem.title.toLowerCase().replace(/\s+/g, "-") === note,
);

// Get the first note after filtering
const title = filteredNotes[0]?.title;
const pubDate = filteredNotes[0]?.pubDate;
const description = filteredNotes[0]?.description;
const url = filteredNotes[0]?.url;
---

<Layout pageTitle={title}>
  <div class="wrapper">
    <header class="border flow" data-wrapper-type="inner">
      {
        url ? (
          <h1>
            <a href={url}>{title}</a>
          </h1>
        ) : (
          <h1>{title}</h1>
        )
      }
    </header>
    <article>
      <div class="border region flow" data-wrapper-type="inner">
        <small>
          <time datetime={pubDate}>{dateFormatter(pubDate)}</time>
        </small>
        {/*set:html allows passing HTML from the JSON string*/}
        <p set:html={description} />
      </div>
      <div class="region flow" data-wrapper-type="inner">
        <p><a href="/notes/">Back to the notes</a></p>
      </div>
    </article>
  </div>
</Layout>
